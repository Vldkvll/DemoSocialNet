{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/Input.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","className","cs","profileStatus","profileStatusSpan","key","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","Input","onPhotoProfileSelect","type","id","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","buttonMod","formSummaryError","profileB","contactTitle","myCreateField","myTextarea","contacts","Object","keys","map","contactsB","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","github","userId","lookingForAJob","lookingForAJobDescription","contactValue","Contact","ProfileInfo","saveProfile","Preloader","item","ava","src","photos","large","small","alt","target","files","length","savePhoto","initialValues","formData","then","Posts","messenger","likesCount","maxLength15","maxLength","HandlerMyPostsForm","Field","component","label","name","validate","required","buttons","MyPosts","memo","profilePage","postsElements","dispatch","postData","postElem","textareaButtons","values","addPosts","newPostText","post","MyPostsContainer","addPostActionCreator","updateNewPostText","text","action","updateNewPostTextActionCreator","Profile","profileFromState","statusFromState","ProfileContainer","match","params","AuthorizedId","history","push","getUserProfile","getStatusUsers","refreshProfilePage","prevProps","prevState","snapshot","compose","usersId","isAuthFromState","withRouter"],"mappings":"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","file":"static/js/3.a70e9125.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__2l-hN\",\"ava\":\"ProfileInfo_ava__3zJkw\",\"profile\":\"ProfileInfo_profile__3xgL6\",\"profileB\":\"ProfileInfo_profileB__IqdZr\",\"contacts\":\"ProfileInfo_contacts__15wOs\",\"contactsB\":\"ProfileInfo_contactsB__3dfeX\",\"contactTitle\":\"ProfileInfo_contactTitle__1PQ1s\",\"profileStatus\":\"ProfileInfo_profileStatus__1pWxe\",\"profileStatusSpan\":\"ProfileInfo_profileStatusSpan__bNvP9\",\"buttonMod\":\"ProfileInfo_buttonMod__18aP2\",\"labelInputImg\":\"ProfileInfo_labelInputImg__3luqv\",\"formSummaryError\":\"ProfileInfo_formSummaryError__1ojRl\"};","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    };\n}\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth === false) return <Redirect to={\"/login\"}/>;\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectPlusAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectPlusAuthRedirectComponent;\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__3byj-\",\"textareaButtons\":\"MyPosts_textareaButtons__1LXur\",\"buttons\":\"MyPosts_buttons__3piLm\",\"item\":\"MyPosts_item__3OFSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__3rWoR\"};","import React, {useEffect, useState} from \"react\";\nimport cs from \"./ProfileInfo.module.css\"\n\nconst ProfileStatusWithHook = (props) => {\n\n    // let stateWithSetstate = useState(false);\n    // let editMode = stateWithSetstate[0];\n    // let setEditMode = stateWithSetstate[1];\n    // Or // Destructuring Assignment\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(()=> {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n    const deActivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus( e.currentTarget.value)\n\n    };\n\n    return (\n        <>\n            {!editMode &&\n            <div className={cs.profileStatus}>\n                    <span\n                        className={cs.profileStatusSpan}\n                        key={\"unique\"}\n                          onDoubleClick={activateEditMode}>\n                        {props.status || \"-------\"}\n                    </span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input key={\"unique2\"}\n                       onChange={onStatusChange}\n                       onBlur={deActivateEditMode}\n                       autoFocus={true}\n                       value={status}/>\n            </div>\n            }\n        </>\n    );\n}\nexport default ProfileStatusWithHook;\n\n","import React from \"react\";\nimport style from \"./ProfileInfo.module.css\"\n\n\nconst Input = ({onPhotoProfileSelect}) => {\n    return (\n        <>\n            <input\n                onChange={onPhotoProfileSelect}\n                type=\"file\"\n                // className=\"form-control-file \"\n                id=\"file-input\"\n            />\n\n            {/*<label*/}\n            {/*    htmlFor=\"file-input\"*/}\n            {/*    // className={style.labelInputImg}*/}\n            {/*>*/}\n            {/*</label>*/}\n        </>\n    )\n};\n\nexport default Input;","import React, {useState} from \"react\";\nimport cs from \"./ProfileInfo.module.css\"\nimport {Input, myCreateField, myTextarea} from \"../../Common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <button className={`btn btn-outline-primary ${cs.buttonMod}`}>\n                    Save\n                </button>\n                {error && <div className={cs.formSummaryError}>{error}</div>}\n            </div>\n\n            <div className={cs.profile}>\n                <b className={cs.profileB}> Personality:</b>\n                <div>\n                    <b className={cs.contactTitle}>Name - </b>\n                    {myCreateField(\"Full Name\",\n                        \"fullName\", \"text\", null, Input,)}\n                </div>\n                <div>\n                    <b className={cs.contactTitle}>Looking for a Job?</b>\n                    {myCreateField(null, \"lookingForAJob\", \"checkbox\", null,\n                        Input, null, \"\")}\n                </div>\n                <div>\n                    <b className={cs.contactTitle}> My professional skills: </b>\n                    {myCreateField(\"Looking for a Job descriptions\",\n                        \"lookingForAJobDescription\", \"text\", null, myTextarea,)}\n                    {/*React, React-Redux, Redux-Form, React-Router, JS, Python, HTML, CSS, Git, English-Intermediate*/}\n                </div>\n                <div>\n                    <b className={cs.contactTitle}> About Me: </b>\n                    {myCreateField(\"About Me\",\n                        \"aboutMe\", \"text\", null, myTextarea,)}\n                    {/*Intelligent, Kind, Hard-Working employee*/}\n                </div>\n\n                <div className={cs.contacts}>\n                    <b className={cs.profileB}> My Contacts: </b> {Object.keys(profile.contacts).map(key => {\n                    return (\n                        <div className={cs.contactsB} key={key}>\n                            <b>key: {myCreateField(key,\n                                \"contacts.\" + key, \"text\", null, Input,)} </b>\n                        </div>)\n                })}\n                </div>\n\n\n            </div>\n\n\n        </form>\n    )\n}\n\n\nexport const ProfileDataFormRedux = reduxForm({\n    form: \"edit-profile\",\n})(ProfileDataForm);","import React, {useState} from \"react\";\nimport cs from \"./ProfileInfo.module.css\"\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport Input from \"./Input\";\nimport {ProfileDataFormRedux} from \"./ProfileDataForm\";\n// import photoAva from \"../../../assets/images/aVaSummer.png\"\n\nconst ProfileInfo = ({profile, isOwner, saveProfile, ...props}) => {\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>;\n    }\n    let photoAva = 'https://cdn.pixabay.com/photo/2020/02/11/14/10/summer-4839685_960_720.png'\n\n    const onPhotoProfileSelect = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0]);\n        }\n    };\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(() => {\n            setEditMode(false);\n        })\n    };\n\n    return (\n        <div>\n            <div className={`${cs.item}`}>\n                <div className={`${cs.ava}`}>\n                    <img\n\n                        src={(profile && ((profile.photos.large != null) || (profile.photos.small != null)))\n                            ? profile.photos.large || profile.photos.small\n                            : photoAva}\n                        alt=\"Profile ava\"/>\n                    {isOwner &&\n                    <Input onPhotoProfileSelect={onPhotoProfileSelect}/>\n                    }\n\n                    <div className={cs.profileStatus}>\n                        <div>\n                            <ProfileStatusWithHook\n                                status={props.status}\n                                updateStatus={props.updateStatus}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                {editMode\n                    ? (<ProfileDataFormRedux initialValues={profile}\n                                             profile={profile}\n                                             onSubmit={onSubmit}\n                    />)\n                    : (<ProfileData profile={profile}\n                                    isOwner={isOwner}\n                                    goToEditMode={() => setEditMode(true)}\n                    />)\n                }\n            </div>\n        </div>\n    );\n};\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div>\n            {isOwner && <div>\n                <button onClick={goToEditMode} className={`btn btn-outline-primary ${cs.buttonMod}`}>Edit</button>\n            </div>}\n            <div className={cs.profile}>\n                <b className={cs.profileB}> Personality:</b>\n                <div><b className={cs.contactTitle}>Name - </b> {!profile\n                    ? \"\"\n                    : profile.fullName}\n                </div>\n                <div><b className={cs.contactTitle}>About Me: </b> {!profile\n                    ? \"\" : profile.aboutMe}\n                </div>\n                <div><b className={cs.contactTitle}>Github - </b> {!profile ? \"\"\n                    : profile.contacts.github}\n                </div>\n                <div><b className={cs.contactTitle}>User Id: </b>{!profile\n                    ? \"\"\n                    : `${profile.userId}`}\n                </div>\n                <div><b className={cs.contactTitle}>Looking for a Job</b> {!profile.lookingForAJob\n                    ?\n                    \" - Did you really find a job? ?!\"\n                    : \"- Sure, of course!!\"}\n                </div>\n                <div> {profile.lookingForAJob &&\n                <div>\n                    <b className={cs.contactTitle}> My skills: </b> {profile.lookingForAJobDescription}\n                </div>\n                }\n                </div>\n            </div>\n\n            <div className={cs.contacts}>\n                <b className={cs.profileB}> My Contacts: </b> {Object.keys(profile.contacts).map(key => {\n                return (\n                    <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>)\n            })}\n            </div>\n        </div>\n    )\n};\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={cs.contactsB}><b\n        className={cs.contactTitle}>{contactTitle}: </b>{contactValue}</div>\n};\n\nexport default ProfileInfo;","import React from \"react\";\nimport cs from \"./Posts.module.css\"\n\nconst Posts = (props) => {\n  return (\n    \t  <div className={cs.item}>\n\t\t  \t<img src=\"https://cdn.pixabay.com/photo/2016/04/01/12/11/avatar-1300582_960_720.png\" alt=\"ava\"/>\n\t\t\t  {props.messenger}\n\t\t\t  <div>\n\t\t\t\t  <span>LIKE!</span>{props.likesCount}\n\t\t\t  </div>\n\t\t  </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport cs from \"./MyPosts.module.css\"\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLength, required} from \"../../../Utils/Validators/Validators\";\nimport {myTextarea, renderField, Textarea} from \"../../Common/FormsControls/FormsControls\";\n\nconst maxLength15 = maxLength(15);\n\nconst AddNewPostsForm = (props) => {\n    // (\"I'm clever & rich.\")\n    return (\n       <form onSubmit={props.handleSubmit}>\n                    <div>\n                    <Field component={myTextarea}\n                           type=\"text\"\n                           label=\"Please enter something beautiful\"\n                           name=\"newPostText\"\n                           validate={ [ required, maxLength15 ] } />\n                    </div>\n                    <div className={cs.buttons}>\n                        <button className=\"btn btn-warning disabled\">Add post</button>\n                    </div>\n            </form>\n    );\n};\nexport const HandlerMyPostsForm= reduxForm({\n    form: \"myPost\",\n})(AddNewPostsForm);\n\n","import React from \"react\";\nimport cs from \"./MyPosts.module.css\"\nimport Posts from \"./Posts/Posts\";\nimport {HandlerMyPostsForm} from \"./MyPostsForm\";\n\n\nconst MyPosts = React.memo((props) => {\n    // (\"I'm clever & rich.\")\n    let state = props.profilePage;\n    let dispatch = props.dispatch;\n    let postsElements = state.postData.map(postElem =>\n        (<Posts messenger={postElem.messenger} likesCount={postElem.likesCount} key={postElem.id}/>));\n\n    const onSubmit = (values) => {\n        if(values) props.addPosts(values.newPostText);\n    };\n    return (\n        <div>\n            <div className={cs.textareaButtons}>\n                <h3>My Posts</h3>\n                <HandlerMyPostsForm onSubmit={onSubmit}/>\n            </div>\n            <div className={cs.post}>\n                {postsElements}\n            </div>\n        </div>\n    );\n});\nexport default MyPosts;\n\n\n","import React from \"react\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../MyRedux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return{\n      profilePage: state.profilePage,\n      newPostText: state.profilePage.newPostText\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n      addPosts: (newPostText) => {\n          dispatch(addPostActionCreator(newPostText));\n      },\n      updateNewPostText: (text) => {\n          let action = updateNewPostTextActionCreator(text);\n          dispatch(action);\n      },\n  }\n};\n\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return (\n        <div >\n            <ProfileInfo profile={props.profileFromState}\n                         savePhoto={props.savePhoto}\n                         isOwner={props.isOwner}\n                         status={props.statusFromState}\n                         updateStatus={props.updateStatus}\n                         saveProfile={props.saveProfile}/>\n            <MyPostsContainer/>\n\n        </div>\n    );\n};\n\nexport default Profile;\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getStatusUsers, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../MyRedux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfilePage() {\n        let userId = this.props.match.params.userId;\n        if (!userId){\n            userId = this.props.AuthorizedId;\n            if (!userId){\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatusUsers(userId);\n    }\n    componentDidMount() {\n       this.refreshProfilePage();\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\n        this.refreshProfilePage();\n    }\n\n    render() {\n        return <>\n            <div>\n                <Profile {...this.props}\n                         savePhoto={this.props.savePhoto}\n                         isOwner={!this.props.match.params.userId}\n                         profile={this.props.profileFromState}\n                         status={this.props.statusFromState}\n                         updateStatus={ this.props.updateStatus}/>\n            </div>\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profileFromState: state.profilePage.profile,\n        statusFromState: state.profilePage.status,\n        AuthorizedId: state.auth.usersId,\n        isAuthFromState: state.auth.isAuth,\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps,\n        {getUserProfile, getStatusUsers, updateStatus, savePhoto, saveProfile}),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer);\n\n\n"],"sourceRoot":""}